"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var http_2 = require("@angular/http");
var _1 = require("rxjs/");
var application = require("application");
var AppointmentService = (function () {
    function AppointmentService(http) {
        this.http = http;
        this.url = "https://tools.brandinstitute.com/wsbi/bimobile.asmx/";
        this.urlGetAppointments = "getAppointments";
        this.urlSetGeoLocation = "addGeoLocation";
        this._appointments = new _1.BehaviorSubject([]);
        this.latitude = 25.773338;
        this.longitude = -80.190072;
        this.monthNames = ["Jan", "Febr", "Mar", "Apr", "May", "Jun",
            "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
        ];
        this._appointments = new _1.BehaviorSubject([]);
        this.appointments = this._appointments.asObservable();
    }
    AppointmentService.prototype.getAppointments = function () {
        var _this = this;
        var headers = new http_1.Headers({ 'content-type': 'application/x-www-form-urlencoded' });
        var body = new http_2.URLSearchParams();
        body.set('phoneId', "3057427989");
        body.set('phoneIdType', "1111111111");
        body.set('selDate', "10/16/2017");
        return this.http.post(this.url + this.urlGetAppointments, body.toString(), { headers: headers }).map(function (res) {
            var data = res.json();
            res.json().map(function (obj) {
                var dateTime = new Date(obj.AppDate);
                obj.AppDate = dateTime.getDate().toString() + ',' + _this.monthNames[dateTime.getMonth()].toString() + '-' +
                    +((dateTime.getHours() + 24 - 2) % 24).toString() + ':'
                    + dateTime.getMinutes().toString() + ((dateTime.getHours() >= 12) ? " PM" : " AM").toString();
            });
            return data;
        });
    };
    AppointmentService.prototype.getUsersNumber = function () {
    };
    AppointmentService.prototype.setGeoLocation = function (location, appointment) {
        var dateTime = new Date();
        var dateahora = dateTime.getFullYear().toString() + '-' + dateTime.getMonth().toString() + '-' + dateTime.getDate().toString() + ' ' +
            +dateTime.getHours().toString() + ':' + dateTime.getMinutes().toString() + ':' + dateTime.getSeconds().toString();
        var headers = new http_1.Headers();
        headers.append('Content-Type', 'application/x-www-form-urlencoded');
        var dataNumber = application.android.context.getSystemService(android.content.Context.TELEPHONY_SERVICE).getLine1Number();
        var body = new http_2.URLSearchParams();
        body.set('phoneId', "30574252");
        body.set('phoneIdType', "1");
        body.set('geoDate', dateahora);
        // body.set('geoDate', now.toString());
        body.set('appId', appointment.AppId.toString());
        body.set('geoLatitude', location.latitude.toString());
        body.set('geoLongitude', location.longitude.toString());
        return this.http.post('https://tools.brandinstitute.com/wsbi/bimobile.asmx/addGeoLocatio', body.toString(), { headers: headers }).map(function (res) { return res.json(); });
    };
    AppointmentService.prototype.getAppointment = function (id) {
        return this.appointments.filter(function (appointment) { return appointment[0].AppDate === "10/16/2017"; })[0];
    };
    AppointmentService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.Http])
    ], AppointmentService);
    return AppointmentService;
}());
exports.AppointmentService = AppointmentService;
//# sourceMappingURL=data:application/json;base64,